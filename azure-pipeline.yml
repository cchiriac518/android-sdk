trigger:
  branches:
    include:
      - main
      - develop

  paths:
    exclude:
      - version.txt
      - gradle.properties

variables:
  - group: Mobile-Apps

resources:
    repositories:
    - repository: test-app
      endpoint: github_sc
      name: cchiriac518/library-test
      ref: refs/heads/develop
      type: github

jobs:
- job: BuildAndroidApp
  displayName: 'Build Android app'
  pool:
    vmImage: 'macOS-11'
  steps:
  - checkout: self
    persistCredentials: true
    fetchTags: true

  - script: echo "Step for all branches"
    displayName: 'Step for all branches'

  - ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:

    - script: brew install gnu-sed
      displayName: 'Install gsed'

    - script: |
        cd android-mobile-gradle
        git fetch --all --tags
        LAST_TAG=$(git tag | tail -n 1)
        IFS='.' read -ra VERSION_PARTS <<< "$LAST_TAG"
        MAJOR=${VERSION_PARTS[0]#v}
        MINOR=${VERSION_PARTS[1]}
        PATCH=${VERSION_PARTS[2]}
        BUILD=${VERSION_PARTS[3]}
    
        VERSION_NAME=$(grep "VERSION_NAME" gradle.properties | cut -d'=' -f2)
        VERSION_CODE=$(grep "VERSION_CODE" gradle.properties | cut -d'=' -f2)

        PATCH=$((PATCH+1))
        BUILD=$((BUILD+1))


        if [[ $PATCH -eq 9 ]]; then
          MINOR=$((MINOR+1))
          PATCH=0
        fi

        if [[ $MINOR -eq 9 ]]; then
          MAJOR=$((MAJOR+1))
          MINOR=0
        fi

        NEW_TAG="${MAJOR}.${MINOR}.${PATCH}.${BUILD}"
        NEW_TAG="${NEW_TAG// /}"
        NEW_VERSION_NAME="${MAJOR}.${MINOR}.${PATCH}"
        NEW_VERSION_CODE="${BUILD}"
        

        gsed -i "s/${VERSION_NAME}/${NEW_VERSION_NAME}/" ./gradle.properties
        gsed -i "s/${VERSION_CODE}/${NEW_VERSION_CODE}/" ./gradle.properties

        git config --global user.email "az-pipeline@gmail.com"
        git config --global user.name "az-pipeline"

        echo $NEW_TAG > version.txt
        git add version.txt gradle.properties
        git commit -m "Update app version"
        git push origin HEAD:$(Build.SourceBranch)
        echo "##vso[task.setvariable variable=NEW_TAG]$NEW_TAG"
        echo "##vso[task.setvariable variable=OLD_APP_VERSION]$LAST_TAG"

      displayName: 'Get Last Tag and Increment Minor Version'

    - script: |
        cd android-mobile-gradle
        echo "Creating Git tag $NEW_TAG"
        git tag $NEW_TAG
        git push origin --tags
      displayName: 'Create Git Tag and Push'

    - checkout: test-app
      persistCredentials: true
      fetchTags: true

    - script: |
        cd library-test
        git fetch --all
        git checkout develop
        git config --global user.email "az-pipeline@gmail.com"
        git config --global user.name "az-pipeline"

        SDK_VERSION=$(grep -oE "com\.github\.test-android-sdk:[0-9]+(\.[0-9]+)+\.[0-9]+" build.gradle | awk -F ":" '{print $2}')
        gsed -i "s/${SDK_VERSION}/${NEW_TAG}/" ./build.gradle
        git add .
        git commit -m "Updated android-sdk dependency version"
        git push
      displayName: 'Modify file and commit changes'

    - script: |
        cd android-mobile-gradle
        echo "Setting up GitHub CLI"
        echo $(GITHUB_TOKEN) > gh-token.txt
        gh auth login --with-token < gh-token.txt
        rm gh-token.txt
        git fetch --all --tags
        echo "Creating PR main->develop"
        gh pr create --base develop --head $(Build.SourceBranch) --title "AZ pipeline PR v$NEW_TAG" --body "Update develop branch with version $NEW_TAG"
      displayName: 'Create PR to update develop branch with new version'
